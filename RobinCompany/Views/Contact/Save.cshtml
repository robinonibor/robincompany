@model RobinCompany.Models.Contact
@using RobinCompany.Models

@using (Html.BeginForm("save", "contact", FormMethod.Post, new { id = "popup" }))
{
    if (Model != null && Model.ContactId > 0)
    {
        @Html.HiddenFor(x => x.ContactId)
    }

    <div class="form-group">
        <label>Title</label>
        @Html.DropDownList("ContactTitleId",
       EnumHelper.GetSelectList(typeof(TitleofContact)),
       "Select My Type",
       new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.ContactTitleId)
    </div>
    <div class="form-group">
        <label>First Name</label>
        @Html.TextBoxFor(x => x.ContactFirstName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.ContactFirstName)
    </div>
    <div class="form-group">
        <label>Last Name</label>
        @Html.TextBoxFor(x => x.ContactLastName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.ContactLastName)
    </div>
    <div class="form-group">
        <label>Type of Contract</label>
        @Html.DropDownList("TypeOfContract",
       EnumHelper.GetSelectList(typeof(ContractType)),
       "Select My Type",
       new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.TypeOfContract)
    </div>
    <div class="form-group">
        <label>Email</label>
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Email)
    </div>
    <div class="form-group">
        <label>Phone Number</label>
        @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.PhoneNumber)
    </div>
    <div class="form-group">
        <label>Department</label>
        @Html.TextBoxFor(x => x.Department, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Department)
    </div>
 

    <input type="submit" value="Save" />
}
